{"version":3,"sources":["MyCusomtContextMenu.js","App.js","reportWebVitals.js","index.js"],"names":["MyCustomContextMenu","targetId","options","classes","useState","visible","posX","posY","contextData","setContextData","contextRef","useRef","useEffect","contextMenuEventHandler","event","targetElement","document","getElementById","contains","target","preventDefault","clientX","clientY","current","offClickHandler","addEventListener","removeEventListener","useLayoutEffect","offsetWidth","window","innerWidth","offsetHeight","innerHeight","ref","className","style","display","left","top","listWrapper","map","option","listItem","App","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b7909b11.chunk.js","sourcesContent":["import { useState, useEffect, useRef, useLayoutEffect } from 'react';\nimport './App.css';\n\nconst MyCustomContextMenu= ({ targetId, options, classes }) => {\n  const [contextData, setContextData]= useState({ visible:false, posX: 0, posY: 0});\n  const contextRef= useRef(null);;\n\n  useEffect(() => {\n    const contextMenuEventHandler= (event) => {\n      const targetElement= document.getElementById(targetId)\n      if(targetElement && targetElement.contains(event.target)){\n        event.preventDefault();\n        setContextData({ visible: true, posX: event.clientX, posY: event.clientY })\n      }else if(contextRef.current && !contextRef.current.contains(event.target)){\n        setContextData({ ...contextData, visible: false })\n      }\n    }\n\n    const offClickHandler= (event) => {\n      if(contextRef.current && !contextRef.current.contains(event.target)){\n        setContextData({ ...contextData, visible: false })\n      }\n    }\n\n    document.addEventListener('contextmenu', contextMenuEventHandler)\n    document.addEventListener('click', offClickHandler)\n    return () => {\n      document.removeEventListener('contextmenu', contextMenuEventHandler)\n      document.removeEventListener('click', offClickHandler)\n    }\n  }, [contextData, targetId])\n\n  useLayoutEffect(() => {\n    if(contextData.posX + contextRef.current?.offsetWidth > window.innerWidth){\n      setContextData({ ...contextData, posX: contextData.posX - contextRef.current?.offsetWidth})\n    }\n    if(contextData.posY + contextRef.current?.offsetHeight > window.innerHeight){\n      setContextData({ ...contextData, posY: contextData.posY - contextRef.current?.offsetHeight})\n    }\n  }, [contextData])\n\n  return (\n    <div ref={contextRef} className='contextMenu' style={{ display:`${contextData.visible ? 'block' : 'none'}`, left: contextData.posX, top: contextData.posY }}>\n      <div className={`optionsList ${classes?.listWrapper}`}>\n        {options.map((option) => (\n          <li key={option} className={`optionListItem ${classes?.listItem}`}>\n            {option}\n          </li>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default MyCustomContextMenu;\n","import MyCustomContextMenu from './MyCusomtContextMenu';\n\nconst App= () => {\n\n  return (\n    <div className='wrapper'>\n      <div id='defaultContextmenuArea' className='defaultContextmenuArea'>\n      </div>\n      <div id='customContextmenuArea1' className='customContextmenuArea1' >\n        <MyCustomContextMenu\n          targetId='customContextmenuArea1'\n          options={['View', 'Update', 'Delete']}\n          classes={{\n            listWrapper: 'customContextmenuArea1ListWrapper',\n            listItem: 'customContextmenuArea1ListItem'\n          }}\n        />\n      </div>\n      <div id='customContextmenuArea2' className='customContextmenuArea2' >\n        <MyCustomContextMenu\n          targetId='customContextmenuArea2'\n          options={['Netflix', 'Prime', 'Hotstar', 'Youtube']}\n          classes={{\n            listWrapper: 'customContextmenuArea2ListWrapper',\n            listItem: 'customContextmenuArea2ListItem'\n          }}\n        />\n      </div>\n      <div id='customContextmenuArea3' className='customContextmenuArea3' >\n        <MyCustomContextMenu\n          targetId='customContextmenuArea3'\n          options={['Footbal', 'Cricket', 'BasketBall', 'Volleyball', 'Tennis', 'Hockey', 'Golf']}\n          classes={{\n            listWrapper: 'customContextmenuArea3ListWrapper',\n            listItem: 'customContextmenuArea3ListItem'\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}